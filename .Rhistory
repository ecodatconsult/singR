setNames(levels[level_shift:5])
})
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
})
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
})
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind)
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(levels)
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(rev(levels))
levels <- c("data_dir", "deployment_id", "location_id", "region_id", "project_id")
level_shift <- which(levels == level)
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(rev(levels))
extract_path_info <- function(path, level = "data"){
levels <- c("data_dir", "deployment_id", "location_id", "region_id", "project_id")
level_shift <- which(levels == level)
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(rev(levels))
}
levels <- c("data_dir", "deployment_id", "location_id", "region_id", "project_id")
level_shift <- which(levels == level)
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(rev(levels))
extract_path_info <- function(path, level = "data_dir"){
levels <- c("data_dir", "deployment_id", "location_id", "region_id", "project_id")
level_shift <- which(levels == level)
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(rev(levels))
}
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(rev(levels))
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(rev(levels))
levels <- c("data_dir", "deployment_id", "location_id", "region_id", "project_id")
level_shift <- which(levels == level)
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(rev(levels))
level = "data_dir"
levels <- c("data_dir", "deployment_id", "location_id", "region_id", "project_id")
level_shift <- which(levels == level)
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(rev(levels))
devtools::load_all()
devtools::load_all()
input_dir <- system.file(package = "singR")
deployment <- deployment_info(input_dir)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv")
)
)
classification$data_file |>
extract_path_info(level = "data_dir")
devtools::load_all()
input_dir <- system.file(package = "singR")
deployment <- deployment_info(input_dir)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv")
)
)
classification$data_file |>
extract_path_info(level = "data_dir")
classification$data_file |>
extract_path_info(level = "data_dir") |>
cbind(classification)
classification$data_file |>
extract_path_info(level = "data_dir") |>
cbind(classification |>
dplyr::select(data_id, data_file))
deployment <- deployment_info(input_dir)
deployment$deployment_path |>
extract_path_info(level = "deployment_id")
path |>
dirname() |>
stringr::str_split("/") |>
lapply(function(x){
rev(x)[1:(6 - level_shift)] |>
as.list() |>
data.frame() |>
setNames(levels[level_shift:5])
}) |>
do.call(what = rbind) |>
dplyr::select(rev(levels)[seq(6 - level_shift)])
devtools::load_all()
deployment$deployment_path |>
extract_path_info(level = "deployment_id")
deployment$deployment_path |>
extract_path_info(level = "deployment_id")
deployment$deployment_path |>
extract_path_info(level = "deployment_id") |>
apply(1, function(x){
x |>
paste(collapse = "_") |>
digest::digest(algo = "md5")
})
deployment |>
dplyr::mutate(deployment_id =  deployment$deployment_path |>
extract_path_info(level = "deployment_id") |>
apply(1, function(x){
x |>
paste(collapse = "_") |>
digest::digest(algo = "md5")
}))
deployment_info |>
dplyr::mutate(deployment_id =  deployment$deployment_path |>
extract_path_info(level = "deployment_id") |>
apply(1, function(x){
x |>
paste(collapse = "_") |>
digest::digest(algo = "md5")
}), .before = "deployment_path")
deployment$deployment_path |>
extract_path_info(level = "deployment_id") |>
apply(1, function(x){
x |>
paste(collapse = "_") |>
digest::digest(algo = "md5")
})
deployment_ids <- deployment_info$deployment_path |>
extract_path_info(level = "deployment_id") |>
apply(1, function(x){
x |>
paste(collapse = "_") |>
digest::digest(algo = "md5")
}) |> unlist()
deployment_info$deployment_path
deployment <- deployment_info(input_dir)
devtools::load_all()
input_dir <- system.file(package = "singR")
deployment <- deployment_info(input_dir)
devtools::load_all()
input_dir <- system.file(package = "singR")
deployment <- deployment_info(input_dir)
list.files(input_dir, pattern = "_Summary.txt", recursive = TRUE, full.names = TRUE) |>
normalizePath(winslash = "/")
list.files(input_dir, pattern = "_Summary.txt", recursive = TRUE, full.names = TRUE) |>
normalizePath(winslash = "/") |>
lapply(function(x){
format_deployment(file = x)
})
devtools::load_all()
deployment <- deployment_info(input_dir)
deployment
devtools::load_all()
metadata <- song_info(input_dir)
metadata
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv")
)
)
classification
all(classification$deployment_id %in% deployment$deployment_id)
all(classification$data_id %in% metadata$data_id)
# get
metadata <- song_info(input_dir)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv")
)
)
all(classification$deployment_id %in% deployment$deployment_id)
all(classification$data_id %in% metadata$data_id)
all(classification$data_id %in% metadata$data_id)
deployment$geometry
deployment$geometry |>
sf::st_coordinates()
coords <- deployment$geometry |>
sf::st_centroid()
coords <- deployment$geometry |>
sf::st_centroid() |>
sf::st_coordinates()
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2]
)
)
classification
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.02,
overlap = 1.5
)
)
classification
classification
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.02,
overlap = 1.5,
min_conf = 0.2
)
)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.02,
overlap = 1.5,
min_conf = 0.2
)
)
deployment_sel <- deployment |>
dplyr::filter(deployment_id == deployment_id_sel)
deployment_sel <- deployment
coords <- deployment_sel$geometry |>
sf::st_centroid() |>
sf::st_coordinates()
week <- mean(deployment_sel$start_datetime, deployment_sel$end_datetime)
mean(deployment_sel$start_datetime, deployment_sel$end_datetime)
c(deployment_sel$start_datetime, deployment_sel$end_datetime)
week <- mean(c(deployment_sel$start_datetime, deployment_sel$end_datetime))
mean(c(deployment_sel$start_datetime, deployment_sel$end_datetime))
lubridate::week(mean(c(deployment_sel$start_datetime, deployment_sel$end_datetime)))
48 *lubridate::week(mean(c(deployment_sel$start_datetime, deployment_sel$end_datetime))) / 52
week <- round(48 *lubridate::week(mean(c(deployment_sel$start_datetime, deployment_sel$end_datetime))) / 52)
deployment_sel <- deployment |>
dplyr::filter(deployment_id == deployment_id_sel)
coords <- deployment_sel$geometry |>
sf::st_centroid() |>
sf::st_coordinates()
week <- round(48 *lubridate::week(mean(c(deployment_sel$start_datetime, deployment_sel$end_datetime))) / 52)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.02,
overlap = 1.5,
min_conf = 0.2,
week = week
)
)
View(classification)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.02,
overlap = 1.5,
min_conf = 0.2,
sensitivity = .5
week = week
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.02,
overlap = 1.5,
min_conf = 0.2,
sensitivity = .5,
week = week
)
)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.02,
overlap = 1.5,
min_conf = 0.2,
sensitivity = .5,
week = week
)
)
View(classification)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.02,
overlap = 1.5,
min_conf = 0.2,
sensitivity = 1,
week = week
)
)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.02,
overlap = 1.5,
min_conf = 0.2,
sensitivity = 1.5,
week = week
)
)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.02,
overlap = 1.5,
min_conf = 0.2,
sensitivity = 1.2,
week = week
)
)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.01,
overlap = 1.5,
min_conf = 0.2,
sensitivity = 1.2,
week = week
)
)
View(classification)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.01,
overlap = 1.5,
min_conf = 0.2,
sensitivity = 1.2,
week = week
)
)}
for(deployment_id_sel in deployment_id){
deployment_sel <- deployment |>
dplyr::filter(deployment_id == deployment_id_sel)
coords <- deployment_sel$geometry |>
sf::st_centroid() |>
sf::st_coordinates()
week <- round(48 *lubridate::week(mean(c(deployment_sel$start_datetime, deployment_sel$end_datetime))) / 52)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.01,
overlap = 1.5,
min_conf = 0.2,
sensitivity = 1.2,
week = week
)
)
}
deployment
deployment |>
dplyr::filter(deployment_id == deployment_id_sel)
for(deployment_id_sel in deployment$deployment_id){
deployment_sel <- deployment |>
dplyr::filter(deployment_id == deployment_id_sel)
coords <- deployment_sel$geometry |>
sf::st_centroid() |>
sf::st_coordinates()
week <- round(48 *lubridate::week(mean(c(deployment_sel$start_datetime, deployment_sel$end_datetime))) / 52)
classification <- run_birdnet(birdnet_loc = "~/BirdNET-Analyzer/",
birdnet_args = list(i = input_dir,
o = here::here("birdnet_out.csv"),
lon = coords[1],
lat = coords[2],
locale = "de",
sf_thresh = 0.01,
overlap = 1.5,
min_conf = 0.2,
sensitivity = 1.2,
week = week
)
)
}
